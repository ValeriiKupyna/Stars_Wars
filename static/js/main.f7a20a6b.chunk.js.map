{"version":3,"sources":["img/home/character.jpg","img/home/films.jpg","img/home/planets.jpg","img/home/species.jpg","img/home/starships.jpg","img/home/vehicles.jpg","img/Lazer Sword.png","component/other/header/Header.js","component/other/card/CardCategory.js","component/other/footer/Footer.js","App.js","serviceWorker.js","api/baseApi.js","api/Api.js","component/other/loading/Loading.js","component/other/pagination/Pagination.js","component/pages/film/Films.js","component/other/pagination/ApiPagination.js","component/pages/planets/Planets.js","component/pages/people/People.js","component/pages/species/Species.js","component/pages/Vehicles/Vehicles.js","component/pages/starship/Starships.js","component/other/pageNotFound/PageNotFound.js","component/other/pagination/PaginationOnePage.js","component/pages/film/OneFilm.js","component/pages/people/OnePeople.js","component/pages/species/OneSpecies.js","component/pages/Vehicles/OneVehicles.js","component/pages/starship/OneStarships.js","component/pages/planets/OnePlanets.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","this","props","category","React","Component","CardCategory","src","alt","name","Footer","href","App","Fragment","header_Header","Link","to","card_CardCategory","character","films","species","starships","vehicles","planets","footer_Footer","Boolean","window","location","hostname","match","get","url","arguments","length","undefined","fetch","then","response","json","getId","url_url","replace","getAll","_ref2","Object","asyncToGenerator","regenerator_default","mark","_callee","_ref","pathName","page","urlParams","wrap","_context","prev","next","URLSearchParams","set","abrupt","concat","toString","stop","_x","apply","getById","_ref4","_callee2","_ref3","_context2","pathname","_x2","Loading","sword","Pagination","Films","state","isLoaded","loadData","_this","dataApi","sent","results","setState","updatePageFromUrl","_this$state","pagination_Pagination","map","film","key","title","episode_id","director","release_date","loading_Loading","withRouter","count","_ref$perPage","perPage","pagesCount","Math","ceil","pages","i","push","getSearchWithPage","search","Planets","pagination_ApiPagination","planet","diameter","climate","gravity","terrain","surface_water","population","People","people","person","birth_year","gender","height","mass","Species","specie","classification","average_height","average_lifespan","language","Vehicles","model","manufacturer","crew","vehicle_class","Starship","starship","PageNotFound","PaginationOnePage","VRegExp","RegExp","index","OneFilms","data","loadPeople","pagination_PaginationOnePage","opening_crawl","producer","OnePeople","OneSpecies","designation","OneVehicles","cost_in_credits","passengers","cargo_capacity","consumables","OneStarships","OnePlanets","rotation_period","orbital_period","ReactDOM","render","HashRouter","basename","process","BrowserRouter","Switch","Route","exact","path","component","Starships","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f7a20a6b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/character.33022f18.jpg\";","module.exports = __webpack_public_path__ + \"static/media/films.03a9a1af.jpg\";","module.exports = __webpack_public_path__ + \"static/media/planets.d28c9986.jpg\";","module.exports = __webpack_public_path__ + \"static/media/species.469d9d37.jpg\";","module.exports = __webpack_public_path__ + \"static/media/starships.19706559.jpg\";","module.exports = __webpack_public_path__ + \"static/media/vehicles.788b92b8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Lazer Sword.cacad29a.png\";","import React from \"react\";\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"header\">\r\n        <div className=\"logo\">\r\n          <p>Star Wars</p>\r\n        </div>\r\n          <div>\r\n              <p>{this.props.category}</p>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nclass CardCategory extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"card\">\r\n                <img src={this.props.src} alt=\"card\"/>\r\n                <span className=\"category_text\">{this.props.name}</span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CardCategory;","import React from \"react\";\r\n\r\nclass Footer extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"footer\">\r\n                <img src=\"http://www.antonsetiawan.com/images/github10-inverse.png\" alt=\"qwe\" className=\"github\"/>\r\n                <a href=\"https://github.com/\"> <p>GitHub</p></a>\r\n                <p className=\"dev_name\"> Developed by Vitalik Diadychko</p>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport Header from \"./component/other/header/Header\";\nimport CardCategory from \"./component/other/card/CardCategory\";\nimport Footer from \"./component/other/footer/Footer\";\n\nimport character from './img/home/character.jpg'\nimport films from './img/home/films.jpg'\nimport planets from './img/home/planets.jpg'\nimport species from './img/home/species.jpg'\nimport starships from './img/home/starships.jpg'\nimport vehicles from './img/home/vehicles.jpg'\n\nclass App extends React.Component {\n  render() {\n    return (\n      <>\n        <Header category=\"A VISUAL GUIDE\"/>\n        <div>\n          <div className=\"app\">\n            <Link to=\"/people\">\n              <CardCategory name=\"Character\" src={character} />\n            </Link>\n            <Link to=\"/films\">\n              <CardCategory name=\"Films\" src={films} />\n            </Link>\n            <Link to=\"/species\">\n              <CardCategory name=\"Species\" src={species} />\n            </Link>\n            <Link to=\"/starships\">\n              <CardCategory name=\"Starships\" src={starships} />\n            </Link>\n            <Link to=\"/vehicles\">\n              <CardCategory name=\"Vehicles\" src={vehicles} />\n            </Link>\n            <Link to=\"/planets\">\n              <CardCategory name=\"Planets\" src={planets} />\n            </Link>\n          </div>\n        </div>\n        <Footer />\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const BASE_API_URL = \"https://swapi.co/api/\";\r\nconst ID_API_URL = \"https://swapi.co/api\";\r\n\r\nexport const get =  (url = {}) => {\r\n    return fetch(BASE_API_URL + url)\r\n        .then(response => response.json())\r\n};\r\n\r\nexport const getId =  (url = {}) => {\r\n    const url_url = url.replace('Stars_Wars/', '')\r\n    return fetch(ID_API_URL + url_url)\r\n        .then(url => url.json())\r\n};","import {get, getId} from './baseApi'\r\n\r\nexport const getAll = async ({pathName, page}) => {\r\n    const urlParams = new URLSearchParams();\r\n\r\n    urlParams.set('page', page);\r\n    return get(`${pathName}?${urlParams.toString()}`)\r\n};\r\n\r\nexport const getById = async ({pathName}) => {\r\n    const urlParams = window.location.pathname;\r\n    // const urlId = urlParams.replace(`/${pathName}/`,'');\r\n    return getId(`${urlParams}/`)\r\n};\r\n\r\n","import React from \"react\";\r\nimport Header from \"../header/Header\";\r\n\r\nimport sword from \"../../../img/Lazer Sword.png\"\r\n\r\nclass Loading extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Header />\r\n        <div className=\"loading\">\r\n            <img src={sword} className=\"logo-load-spin\" alt=\"Lazer-Sword\"/>\r\n        </div>\r\n\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Loading;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nclass Pagination extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"pagination\">\r\n                <Link to=\"/\">\r\n                    <p>Home</p>\r\n                </Link>\r\n                <span>/</span>\r\n                <p>{this.props.page}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Pagination;","import React from \"react\";\r\nimport Header from \"../../other/header/Header\";\r\nimport Footer from \"../../other/footer/Footer\";\r\n\r\nimport * as dataApi from \"../../../api/Api\";\r\n\r\nimport Loading from \"../../other/loading/Loading\";\r\nimport Pagination from \"../../other/pagination/Pagination\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nclass Films extends React.Component {\r\n  state = {\r\n    pathName: \"films\",\r\n    isLoaded: false,\r\n    page: 0,\r\n    films: [],\r\n  };\r\n\r\n\r\n  componentDidMount() {\r\n    this.updatePageFromUrl();\r\n  }\r\n\r\n  updatePageFromUrl() {\r\n    const page = 1;\r\n\r\n    this.setState({ page }, this.loadData);\r\n  }\r\n\r\n  loadData = async () => {\r\n\r\n    const { pathName } = this.state;\r\n    const { page } = this.state;\r\n    const { results: films } = await dataApi.getAll({ pathName, page });\r\n\r\n    this.setState({\r\n      films,\r\n      isLoaded: true\r\n    });\r\n  };\r\n\r\n  render() {\r\n\r\n    const { films, isLoaded } = this.state;\r\n    return (\r\n      <>\r\n        {isLoaded ? (\r\n          <>\r\n            <Header />\r\n\r\n              <Pagination page=\"Films\"/>\r\n\r\n\r\n            <div className=\"dataList\">\r\n              {films.map(film => (\r\n                <div key={film.title} className=\"films\">\r\n                  <Link to={`/films/${film.episode_id}`}>\r\n                  <img src={`./img/films/${film.episode_id}.jpg`} alt={film.title}/>\r\n                  </Link>\r\n                  <p>Name: {film.title}</p>\r\n                  <p>Episode: {film.episode_id}</p>\r\n                  <p>Name: {film.director}</p>\r\n                  <p>Name: {film.release_date}</p>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <Footer />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Loading />\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Films;\r\n","import React from \"react\";\r\n\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ApiPagination = ({ location, count, page = 1, perPage = 10 }) => {\r\n  const pagesCount = Math.ceil(count / perPage);\r\n  const pages = [];\r\n\r\n  for (let i = 0; i < pagesCount; i++) {\r\n    pages.push(i + 1);\r\n  }\r\n\r\n  const getSearchWithPage = page => {\r\n    const urlParams = new URLSearchParams(location.search);\r\n\r\n    urlParams.set(\"page\", page);\r\n\r\n    return urlParams.toString();\r\n  };\r\n\r\n  return (\r\n    <div className=\"apiPagination\">\r\n      {pages.map(page => (\r\n        <Link\r\n          key={page}\r\n          to={{\r\n            pathname: location.pathname,\r\n            search: getSearchWithPage(page)\r\n          }}\r\n        >\r\n          {page}\r\n        </Link>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nApiPagination.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  page: PropTypes.number,\r\n  perPage: PropTypes.number\r\n};\r\n\r\nexport default withRouter(ApiPagination);\r\n","import * as dataApi from \"../../../api/Api\";\r\nimport ApiPagination from \"../../other/pagination/ApiPagination\";\r\nimport Loading from \"../../other/loading/Loading\";\r\nimport Header from \"../../other/header/Header\";\r\nimport Footer from \"../../other/footer/Footer\";\r\n\r\n\r\nimport Pagination from \"../../other/pagination/Pagination\";\r\nimport React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\n\r\nclass Planets extends React.Component {\r\n    state = {\r\n        pathName: 'planets',\r\n        isLoaded: false,\r\n        page: 0,\r\n        count: 0,\r\n        planets: []\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.updatePageFromUrl();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.updatePageFromUrl();\r\n    }\r\n\r\n    updatePageFromUrl() {\r\n        const { location } = this.props;\r\n        const urlParams = new URLSearchParams(location.search);\r\n        const page = +urlParams.get(\"page\") || 1;\r\n\r\n        if (page === this.state.page) {\r\n            return;\r\n        } else {\r\n            this.setState({ page }, this.loadData);\r\n        }\r\n    }\r\n\r\n    loadData = async () => {\r\n        const {pathName} = this.state;\r\n        const { page } = this.state;\r\n        const { count, results: planets } = await dataApi.getAll({ pathName , page });\r\n\r\n        this.setState({\r\n            planets,\r\n            count,\r\n            isLoaded: true\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { planets, isLoaded, count, page } = this.state;\r\n        return (\r\n            <>\r\n                {isLoaded ? (\r\n                    <>\r\n                        <Header category=\"Planets\"/>\r\n                        <div className=\"nav\">\r\n                            <Pagination page=\"Planets\"/>\r\n                            <ApiPagination count={count} page={page} />\r\n                        </div>\r\n                        <div className=\"dataList\">\r\n                            {planets.map(planet => (\r\n                                <div key={planet.name} className=\"planets\">\r\n                                    <Link to={`/planets/${planet.url.match(/\\d+/)}`}>\r\n                                        <img src={`./img/planets/${planet.url.match(/\\d+/)}.jpg`} alt={planet.name}/>\r\n                                    </Link>\r\n                                    <p>Name: {planet.name}</p>\r\n                                    <p>Diameter: {planet.diameter}</p>\r\n                                    <p>Climate: {planet.climate}</p>\r\n                                    <p>Gravity: {planet.gravity}</p>\r\n                                    <p>Terrain: {planet.terrain}</p>\r\n                                    <p>Surface water: {planet.surface_water}</p>\r\n                                    <p>Population: {planet.population}</p>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        <Footer/>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <Loading />\r\n                    </>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Planets;","import React from \"react\";\r\n\r\nimport * as dataApi from \"../../../api/Api\";\r\nimport ApiPagination from \"../../other/pagination/ApiPagination\";\r\nimport Loading from \"../../other/loading/Loading\";\r\nimport Header from \"../../other/header/Header\";\r\nimport Footer from \"../../other/footer/Footer\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Pagination from \"../../other/pagination/Pagination\";\r\n\r\nclass People extends React.Component {\r\n  state = {\r\n    pathName: \"people\",\r\n    isLoaded: false,\r\n    page: 0,\r\n    count: 0,\r\n    people: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.updatePageFromUrl();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.updatePageFromUrl();\r\n  }\r\n\r\n  updatePageFromUrl() {\r\n    const { location } = this.props;\r\n    const urlParams = new URLSearchParams(location.search);\r\n    const page = +urlParams.get(\"page\") || 1;\r\n\r\n    if (page === this.state.page) {\r\n      return;\r\n    } else {\r\n      this.setState({ page }, this.loadData);\r\n    }\r\n  }\r\n\r\n  loadData = async () => {\r\n    const { pathName } = this.state;\r\n    const { page } = this.state;\r\n    const { count, results: people } = await dataApi.getAll({ pathName, page });\r\n\r\n    this.setState({\r\n      people,\r\n      count,\r\n      isLoaded: true\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { people, isLoaded, count, page } = this.state;\r\n    return (\r\n      <>\r\n        {isLoaded ? (\r\n          <>\r\n            <Header category=\"Character\" />\r\n            <div className=\"nav\">\r\n              <Pagination page=\"Character\" />\r\n              <ApiPagination count={count} page={page} />\r\n            </div>\r\n            <div className=\"dataList\">\r\n              {people.map(person => (\r\n                <div key={person.name} className=\"people\">\r\n                  <Link to={`/people/${person.url.match(/\\d+/)}`}>\r\n                    <img\r\n                      src={`./img/people/${person.url.match(/\\d+/)}.jpg`}\r\n                      alt={person.name}\r\n                    />\r\n                  </Link>\r\n                  <p>Name: {person.name}</p>\r\n                  <p>Birth Year: {person.birth_year}</p>\r\n                  <p>Gender: {person.gender}</p>\r\n                  <p>Height: {person.height}</p>\r\n                  <p>Weight: {person.mass}</p>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <Footer />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Loading />\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default People;\r\n","import React from \"react\";\r\nimport * as dataApi from \"../../../api/Api\";\r\nimport ApiPagination from \"../../other/pagination/ApiPagination\";\r\nimport Loading from \"../../other/loading/Loading\";\r\nimport Header from \"../../other/header/Header\";\r\nimport Footer from \"../../other/footer/Footer\";\r\nimport Pagination from \"../../other/pagination/Pagination\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nclass Species extends React.Component {\r\n    state = {\r\n        pathName: 'species',\r\n        isLoaded: false,\r\n        page: 0,\r\n        count: 0,\r\n        species: []\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.updatePageFromUrl();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.updatePageFromUrl();\r\n    }\r\n\r\n    updatePageFromUrl() {\r\n        const { location } = this.props;\r\n        const urlParams = new URLSearchParams(location.search);\r\n        const page = +urlParams.get(\"page\") || 1;\r\n\r\n        if (page === this.state.page) {\r\n            return;\r\n        } else {\r\n            this.setState({ page }, this.loadData);\r\n        }\r\n    }\r\n\r\n    loadData = async () => {\r\n        const {pathName} = this.state;\r\n        const { page } = this.state;\r\n        const { count, results: species } = await dataApi.getAll({ pathName , page });\r\n\r\n        this.setState({\r\n            species,\r\n            count,\r\n            isLoaded: true\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { species, isLoaded, count, page } = this.state;\r\n        return (\r\n            <>\r\n                {isLoaded ? (\r\n                    <>\r\n                        <Header category=\"Species\"/>\r\n                        <div className='nav'>\r\n                            <Pagination page=\"Species\"/>\r\n                            <ApiPagination count={count} page={page} />\r\n                        </div>\r\n                        <div className=\"dataList\">\r\n                            {species.map(specie => (\r\n                                <div key={specie.name} className=\"species\">\r\n                                    <Link to={`/species/${specie.url.match(/\\d+/)}`}>\r\n                                        <img src={`./img/species/${specie.url.match(/\\d+/)}.jpg`} alt={specie.name}/>\r\n                                    </Link>\r\n                                    <p>Name: {specie.name}</p>\r\n                                    <p>Classification: {specie.classification}</p>\r\n                                    <p>Average height: {specie.average_height}</p>\r\n                                    <p>Average lifespan: {specie.average_lifespan}</p>\r\n                                    <p>Language: {specie.language}</p>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        <Footer/>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <Loading />\r\n                    </>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Species;","import React from \"react\";\r\nimport * as dataApi from \"../../../api/Api\";\r\nimport ApiPagination from \"../../other/pagination/ApiPagination\";\r\nimport Loading from \"../../other/loading/Loading\";\r\nimport Header from \"../../other/header/Header\";\r\nimport Footer from \"../../other/footer/Footer\";\r\nimport Pagination from \"../../other/pagination/Pagination\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nclass Vehicles extends React.Component {\r\n  state = {\r\n    pathName: 'vehicles',\r\n    isLoaded: false,\r\n    page: 0,\r\n    count: 0,\r\n    vehicles: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.updatePageFromUrl();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.updatePageFromUrl();\r\n  }\r\n\r\n  updatePageFromUrl() {\r\n    const { location } = this.props;\r\n    const urlParams = new URLSearchParams(location.search);\r\n    const page = +urlParams.get(\"page\") || 1;\r\n\r\n    if (page === this.state.page) {\r\n      return;\r\n    } else {\r\n      this.setState({ page }, this.loadData);\r\n    }\r\n  }\r\n\r\n  loadData = async () => {\r\n    const {pathName} = this.state;\r\n    const { page } = this.state;\r\n    const { count, results: vehicles } = await dataApi.getAll({ pathName , page });\r\n\r\n    this.setState({\r\n      vehicles,\r\n      count,\r\n      isLoaded: true\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { vehicles, isLoaded, count, page } = this.state;\r\n    return (\r\n        <>\r\n          {isLoaded ? (\r\n              <>\r\n                <Header category=\"Species\"/>\r\n                <div className='nav'>\r\n                  <Pagination page=\"Species\"/>\r\n                  <ApiPagination count={count} page={page} />\r\n                </div>\r\n\r\n                <div className=\"dataList\">\r\n                  {vehicles.map(vehicles => (\r\n                      <div key={vehicles.name} className=\"starships\">\r\n                        <Link to={`/vehicles/${vehicles.url.match(/\\d+/)}`}>\r\n                          <img src={`./img/vehicles/${vehicles.url.match(/\\d+/)}.jpg`} alt={vehicles.name} />\r\n                        </Link>\r\n                        <p>Name: {vehicles.name}</p>\r\n                        <p>Model: {vehicles.model}</p>\r\n                        <p>Manufacturer: {vehicles.manufacturer}</p>\r\n                        <p>Length: {vehicles.length}</p>\r\n                        <p>Crew: {vehicles.crew}</p>\r\n                        <p>Vehicle class: {vehicles.vehicle_class}</p>\r\n                      </div>\r\n                  ))}\r\n                </div>\r\n                <Footer/>\r\n              </>\r\n          ) : (\r\n              <>\r\n                <Loading />\r\n              </>\r\n          )}\r\n        </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Vehicles;\r\n","import React from \"react\";\r\nimport * as dataApi from \"../../../api/Api\";\r\nimport ApiPagination from \"../../other/pagination/ApiPagination\";\r\nimport Loading from \"../../other/loading/Loading\";\r\nimport Header from \"../../other/header/Header\";\r\nimport Footer from \"../../other/footer/Footer\";\r\nimport Pagination from \"../../other/pagination/Pagination\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nclass Starship extends React.Component {\r\n    state = {\r\n        pathName: 'starships',\r\n        isLoaded: false,\r\n        page: 0,\r\n        count: 0,\r\n        starships: []\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.updatePageFromUrl();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.updatePageFromUrl();\r\n    }\r\n\r\n    updatePageFromUrl() {\r\n        const { location } = this.props;\r\n        const urlParams = new URLSearchParams(location.search);\r\n        const page = +urlParams.get(\"page\") || 1;\r\n\r\n        if (page === this.state.page) {\r\n            return;\r\n        } else {\r\n            this.setState({ page }, this.loadData);\r\n        }\r\n    }\r\n\r\n    loadData = async () => {\r\n        const {pathName} = this.state;\r\n        const { page } = this.state;\r\n        const { count, results: starships } = await dataApi.getAll({ pathName , page });\r\n\r\n        this.setState({\r\n            starships,\r\n            count,\r\n            isLoaded: true\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { starships, isLoaded, count, page } = this.state;\r\n        return (\r\n            <>\r\n                {isLoaded ? (\r\n                    <>\r\n                        <Header category=\"Starships \"/>\r\n                        <div className='nav'>\r\n                            <Pagination page=\"Starships \"/>\r\n                            <ApiPagination count={count} page={page} />\r\n                        </div>\r\n                        <div className=\"dataList\">\r\n                            {starships.map(starship => (\r\n                                <div key={starship.name} className=\"starships\">\r\n                                    <Link to={`/starships/${starship.url.match(/\\d+/)}`}>\r\n                                        <img src={`./img/starships/${starship.url.match(/\\d+/)}.jpg`} alt={starship.name} />\r\n                                    </Link>\r\n                                    <p>Name: {starship.name}</p>\r\n                                    <p>Model: {starship.model}</p>\r\n                                    <p>Manufacturer: {starship.manufacturer}</p>\r\n                                    <p>Length: {starship.length}</p>\r\n                                    <p>Crew: {starship.crew}</p>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        <Footer/>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <Loading />\r\n                    </>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Starship ;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst PageNotFound = () => (\r\n  <>\r\n    <div className=\"pageNotFound\">\r\n      <Link to=\"/\">\r\n        <p>Come back home</p>\r\n      </Link>\r\n      <p>404</p>\r\n    </div>\r\n  </>\r\n);\r\n\r\nexport default PageNotFound;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nclass PaginationOnePage extends React.Component {\r\n\r\n    render() {\r\n        const urlParams = window.location.pathname;\r\n        const VRegExp = new RegExp(/\\/\\d+/g);\r\n        const index = urlParams.replace(VRegExp, '');\r\n        const pathName = index.replace(/\\//g, '');\r\n        const url_url = pathName.replace('Stars_Wars/', '')\r\n        return (\r\n            <div className=\"pagination\">\r\n                <Link to=\"/\">\r\n                    <p>Home</p>\r\n                </Link>\r\n                <span>/</span>\r\n                <Link to={index}>\r\n                    <p>{url_url}</p>\r\n                </Link>\r\n                <span>/</span>\r\n                <p>{this.props.name}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PaginationOnePage;","import React from \"react\";\r\nimport Header from \"../../other/header/Header\";\r\nimport Footer from \"../../other/footer/Footer\";\r\nimport * as dataApi from \"../../../api/Api\";\r\nimport Loading from \"../../other/loading/Loading\";\r\nimport PaginationOnePage from \"../../other/pagination/PaginationOnePage\";\r\n\r\nclass OneFilms extends React.Component {\r\n  state = {\r\n    pathName: \"films\",\r\n    data: [],\r\n    isLoaded: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadPeople();\r\n  }\r\n\r\n  loadPeople = async () => {\r\n    const { pathName } = this.state;\r\n    const data = await dataApi.getById({ pathName });\r\n    this.setState({\r\n      data,\r\n      isLoaded: true\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const urlParams = window.location.pathname;\r\n    const index = urlParams.match(/\\d+/);\r\n    const { data, isLoaded } = this.state;\r\n    return (\r\n      <>\r\n        {isLoaded ? (\r\n          <>\r\n            <Header />\r\n            <PaginationOnePage  name={data.title} />\r\n            <div className=\"onePage\">\r\n              <div className=\"onePage_logo\">\r\n                <img src={`../img/films/${index}.jpg`} alt={data.title} />\r\n              </div>\r\n              <div className=\"onePage_text\">\r\n                <p>\r\n                  Name: <span>{data.title}</span>\r\n                </p>\r\n                <p>\r\n                  Episode: <span>{data.episode_id}</span>\r\n                </p>\r\n                <p>\r\n                  Opening crawl: <span>{data.opening_crawl}</span>\r\n                </p>\r\n                <p>\r\n                  Director: <span>{data.director}</span>\r\n                </p>\r\n                <p>\r\n                  Producer: <span>{data.producer}</span>\r\n                </p>\r\n                <p>\r\n                  Release date: <span>{data.release_date}</span>\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <Footer />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Loading />\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OneFilms;\r\n","import React from \"react\";\r\nimport Header from \"../../other/header/Header\";\r\nimport Footer from \"../../other/footer/Footer\";\r\nimport * as dataApi from \"../../../api/Api\";\r\nimport Loading from \"../../other/loading/Loading\";\r\nimport PaginationOnePage from \"../../other/pagination/PaginationOnePage\";\r\n\r\nclass OnePeople extends React.Component {\r\n    state = {\r\n        pathName: \"people\",\r\n        data: [],\r\n        isLoaded: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.loadPeople();\r\n    }\r\n\r\n    loadPeople = async () => {\r\n        const { pathName } = this.state;\r\n        const data = await dataApi.getById({ pathName });\r\n        this.setState({\r\n            data,\r\n            isLoaded: true\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const urlParams = window.location.pathname;\r\n        const index = urlParams.match(/\\d+/);\r\n        const { data, isLoaded } = this.state;\r\n        return (\r\n            <>\r\n                {isLoaded ? (\r\n                    <>\r\n                        <Header />\r\n                        <PaginationOnePage  name={data.name} />\r\n                        <div className=\"onePage\">\r\n                            <div className=\"onePage_logo\">\r\n                                <img src={`../img/people/${index}.jpg`} alt={data.name} />\r\n                            </div>\r\n                            <div className=\"onePage_text\">\r\n                                <p>\r\n                                    Name: <span>{data.name}</span>\r\n                                </p>\r\n                                <p>\r\n                                    Height: <span>{data.height}</span>\r\n                                </p>\r\n                                <p>\r\n                                    Mass: <span>{data.mass}</span>\r\n                                </p>\r\n                                <p>\r\n                                    Birth Year: <span>{data.birth_year}</span>\r\n                                </p>\r\n                                <p>\r\n                                    Gender: <span>{data.gender}</span>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        <Footer />\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <Loading />\r\n                    </>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default OnePeople;","import React from \"react\";\r\nimport Header from \"../../other/header/Header\";\r\nimport Footer from \"../../other/footer/Footer\";\r\nimport * as dataApi from \"../../../api/Api\";\r\nimport Loading from \"../../other/loading/Loading\";\r\nimport PaginationOnePage from \"../../other/pagination/PaginationOnePage\";\r\n\r\nclass OneSpecies extends React.Component {\r\n    state = {\r\n        pathName: \"species\",\r\n        data: [],\r\n        isLoaded: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.loadPeople();\r\n    }\r\n\r\n    loadPeople = async () => {\r\n        const { pathName } = this.state;\r\n        const data = await dataApi.getById({ pathName });\r\n        this.setState({\r\n            data,\r\n            isLoaded: true\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const urlParams = window.location.pathname;\r\n        const index = urlParams.match(/\\d+/);\r\n        const { data, isLoaded } = this.state;\r\n        return (\r\n            <>\r\n                {isLoaded ? (\r\n                    <>\r\n                        <Header />\r\n                        <PaginationOnePage name={data.name} />\r\n                        <div className=\"onePage\">\r\n                            <div className=\"onePage_logo\">\r\n                                <img src={`../img/species/${index}.jpg`} alt={data.name} />\r\n                            </div>\r\n                            <div className=\"onePage_text\">\r\n                                <p>\r\n                                    Name: <span>{data.name}</span>\r\n                                </p>\r\n                                <p>\r\n                                    Classification: <span>{data.classification}</span>\r\n                                </p>\r\n                                <p>\r\n                                    Designation: <span>{data.designation}</span>\r\n                                </p>\r\n                                <p>\r\n                                    Average height: <span>{data.average_height}</span>\r\n                                </p>\r\n                                <p>\r\n                                    Language: <span>{data.language}</span>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        <Footer />\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <Loading />\r\n                    </>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default OneSpecies;","import React from \"react\";\r\nimport Header from \"../../other/header/Header\";\r\nimport Footer from \"../../other/footer/Footer\";\r\nimport * as dataApi from \"../../../api/Api\";\r\nimport Loading from \"../../other/loading/Loading\";\r\nimport PaginationOnePage from \"../../other/pagination/PaginationOnePage\";\r\n\r\nclass OneVehicles extends React.Component {\r\n    state = {\r\n        pathName: \"vehicles\",\r\n        data: [],\r\n        isLoaded: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.loadPeople();\r\n    }\r\n\r\n    loadPeople = async () => {\r\n        const { pathName } = this.state;\r\n        const data = await dataApi.getById({ pathName });\r\n        this.setState({\r\n            data,\r\n            isLoaded: true\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const urlParams = window.location.pathname;\r\n        const index = urlParams.match(/\\d+/);\r\n        const { data, isLoaded } = this.state;\r\n        return (\r\n            <>\r\n                {isLoaded ? (\r\n                    <>\r\n                        <Header />\r\n                        <PaginationOnePage name={data.name} />\r\n                        <div className=\"onePage\">\r\n                            <div className=\"onePage_logo\">\r\n                                <img src={`../img/vehicles/${index}.jpg`} alt={data.name} />\r\n                            </div>\r\n                            <div className=\"onePage_text\">\r\n                                <p>\r\n                                    Name: <span>{data.name}</span>\r\n                                </p>\r\n                                <p>\r\n                                    Model: <span>{data.model}</span>\r\n                                </p>\r\n                                <p>\r\n                                    Manufacturer: <span>{data.manufacturer}</span>\r\n                                </p>\r\n                                <p>\r\n                                    Cost in credits: <span>{data.cost_in_credits}</span>\r\n                                </p>\r\n                                <p>\r\n                                    Length: <span>{data.length}</span>\r\n                                </p>\r\n                                <p>\r\n                                    Crew water: <span>{data.crew}</span>\r\n                                </p>\r\n                                <p>\r\n                                    Passengers : <span>{data.passengers}</span>\r\n                                </p>\r\n                                <p>\r\n                                    Cargo Capacity: <span>{data.cargo_capacity}</span>\r\n                                </p>\r\n                                <p>\r\n                                    Consumables: <span>{data.consumables}</span>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        <Footer />\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <Loading />\r\n                    </>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default OneVehicles;","import React from \"react\";\r\nimport Header from \"../../other/header/Header\";\r\nimport Footer from \"../../other/footer/Footer\";\r\nimport * as dataApi from \"../../../api/Api\";\r\nimport Loading from \"../../other/loading/Loading\";\r\nimport PaginationOnePage from \"../../other/pagination/PaginationOnePage\";\r\n\r\nclass OneStarships extends React.Component {\r\n  state = {\r\n    pathName: \"starships\",\r\n    data: [],\r\n    isLoaded: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadPeople();\r\n  }\r\n\r\n  loadPeople = async () => {\r\n    const { pathName } = this.state;\r\n    const data = await dataApi.getById({ pathName });\r\n    this.setState({\r\n      data,\r\n      isLoaded: true\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const urlParams = window.location.pathname;\r\n    const index = urlParams.match(/\\d+/);\r\n    const { data, isLoaded } = this.state;\r\n    return (\r\n      <>\r\n        {isLoaded ? (\r\n          <>\r\n            <Header />\r\n            <PaginationOnePage name={data.name} />\r\n            <div className=\"onePage\">\r\n              <div className=\"onePage_logo\">\r\n                <img src={`../img/starships/${index}.jpg`} alt={data.name} />\r\n              </div>\r\n              <div className=\"onePage_text\">\r\n                <p>\r\n                  Name: <span>{data.name}</span>\r\n                </p>\r\n                <p>\r\n                  Model: <span>{data.model}</span>\r\n                </p>\r\n                <p>\r\n                  Manufacturer: <span>{data.manufacturer}</span>\r\n                </p>\r\n                <p>\r\n                  Cost in credits: <span>{data.cost_in_credits}</span>\r\n                </p>\r\n                <p>\r\n                  Length: <span>{data.length}</span>\r\n                </p>\r\n                <p>\r\n                  Crew water: <span>{data.crew}</span>\r\n                </p>\r\n                <p>\r\n                  Passengers : <span>{data.passengers}</span>\r\n                </p>\r\n                <p>\r\n                  Cargo Capacity: <span>{data.cargo_capacity}</span>\r\n                </p>\r\n                <p>\r\n                  Consumables: <span>{data.consumables}</span>\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <Footer />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Loading />\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OneStarships;\r\n","import React from \"react\";\r\nimport Header from \"../../other/header/Header\";\r\nimport Footer from \"../../other/footer/Footer\";\r\nimport * as dataApi from \"../../../api/Api\";\r\nimport Loading from \"../../other/loading/Loading\";\r\nimport PaginationOnePage from \"../../other/pagination/PaginationOnePage\";\r\n\r\nclass OnePlanets extends React.Component {\r\n  state = {\r\n    pathName: \"planets\",\r\n    data: [],\r\n    isLoaded: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadPeople();\r\n  }\r\n\r\n  loadPeople = async () => {\r\n    const { pathName } = this.state;\r\n    const data = await dataApi.getById({ pathName });\r\n    this.setState({\r\n      data,\r\n      isLoaded: true\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const urlParams = window.location.pathname;\r\n    const index = urlParams.match(/\\d+/);\r\n    const { data, isLoaded } = this.state;\r\n    return (\r\n      <>\r\n        {isLoaded ? (\r\n          <>\r\n            <Header />\r\n            <PaginationOnePage name={data.name} />\r\n            <div className=\"onePage\">\r\n              <div className=\"onePage_logo\">\r\n                <img src={`../img/planets/${index}.jpg`} alt={data.name} />\r\n              </div>\r\n              <div className=\"onePage_text\">\r\n                <p>\r\n                  Name: <span>{data.name}</span>\r\n                </p>\r\n                <p>\r\n                  Diameter: <span>{data.diameter}</span>\r\n                </p>\r\n                <p>\r\n                  Climate: <span>{data.climate}</span>\r\n                </p>\r\n                <p>\r\n                  Gravity: <span>{data.gravity}</span>\r\n                </p>\r\n                <p>\r\n                  Terrain: <span>{data.terrain}</span>\r\n                </p>\r\n                <p>\r\n                  Surface water: <span>{data.surface_water}</span>\r\n                </p>\r\n                <p>\r\n                  Rotation Period: <span>{data.rotation_period}</span>\r\n                </p>\r\n                <p>\r\n                  Orbital Period: <span>{data.orbital_period}</span>\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <Footer />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Loading />\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OnePlanets;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Films from \"./component/pages/film/Films\";\nimport Planets from \"./component/pages/planets/Planets\";\nimport People from \"./component/pages/people/People\";\nimport Species from \"./component/pages/species/Species\";\nimport Vehicles from \"./component/pages/Vehicles/Vehicles\";\nimport Starships from \"./component/pages/starship/Starships\";\nimport PageNotFound from \"./component/other/pageNotFound/PageNotFound\";\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport OneFilms from \"./component/pages/film/OneFilm\";\nimport OnePeople from \"./component/pages/people/OnePeople\";\nimport OneSpecies from \"./component/pages/species/OneSpecies\";\nimport OneVehicles from \"./component/pages/Vehicles/OneVehicles\";\nimport OneStarships from \"./component/pages/starship/OneStarships\";\nimport OnePlanets from \"./component/pages/planets/OnePlanets\";\nimport { HashRouter } from 'react-router-dom';\n\nconst Root = () => (\n\n    <Router basename={process.env.PUBLIC_URL}>\n        <Switch>\n            <Route exact path=\"/\" component={App} />\n            <Route exact path=\"/films\" component={Films} />\n            <Route path=\"/films/\" component={OneFilms} />\n            <Route exact path=\"/planets\" component={Planets} />\n            <Route path=\"/planets/\" component={OnePlanets} />\n            <Route exact path=\"/people\" component={People} />\n            <Route path=\"/people/\" component={OnePeople} />\n            <Route exact path=\"/species\" component={Species} />\n            <Route path=\"/species/\" component={OneSpecies} />\n            <Route exact path=\"/vehicles\" component={Vehicles} />\n            <Route path=\"/vehicles/\" component={OneVehicles} />\n            <Route exact path=\"/starships\" component={Starships} />\n            <Route path=\"/starships/\" component={OneStarships} />\n            <Route render={PageNotFound} />\n        </Switch>\n    </Router>\n);\n\nReactDOM.render(\n    <HashRouter basename={process.env.PUBLIC_URL}>\n    <Root />\n    </HashRouter>,\n    document.getElementById('root'\n    ));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}