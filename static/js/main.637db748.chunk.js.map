{"version":3,"sources":["img/home/character.jpg","img/home/films.jpg","img/home/planets.jpg","img/home/species.jpg","img/home/starships.jpg","img/home/vehicles.jpg","img/people/q.jpg","component/header/Header.js","component/card/Card.js","component/footer/Footer.js","App.js","serviceWorker.js","api/baseApi.js","api/peopleApi.js","component/pagination/ApiPagination.js","component/loading/Loading.js","component/people/People.js","component/Films.js","component/Planets.js","component/Species.js","component/Vehicles.js","component/Starships.js","component/pageNotFound/PageNotFound.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","this","props","category","React","Component","Card","src","alt","name","Footer","href","App","Fragment","header_Header","Link","to","card_Card","character","films","species","starships","vehicles","planets","footer_Footer","Boolean","window","location","hostname","match","get","url","arguments","length","undefined","fetch","then","response","json","getAll","_ref2","Object","asyncToGenerator","regenerator_default","mark","_callee","_ref","page","urlParams","wrap","_context","prev","next","URLSearchParams","set","abrupt","concat","toString","stop","_x","apply","withRouter","count","_ref$perPage","perPage","pagesCount","Math","ceil","pages","i","push","getSearchWithPage","search","map","key","pathname","Loading","People","state","isLoaded","people","loadPeople","_this","peopleApi","sent","results","setState","updatePageFromUrl","_this$state","pagination_ApiPagination","person","q","loading_Loading","Films","people_People","Planets","getPlanets","Species","getSpecies","Vehicles","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getVehicles","data","URL","console","log","names","bind","assertThisInitialized","Starships","getStarships","PageNotFound","ReactDOM","render","BrowserRouter","basename","process","Switch","Route","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.637db748.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/character.33022f18.jpg\";","module.exports = __webpack_public_path__ + \"static/media/films.03a9a1af.jpg\";","module.exports = __webpack_public_path__ + \"static/media/planets.d28c9986.jpg\";","module.exports = __webpack_public_path__ + \"static/media/species.469d9d37.jpg\";","module.exports = __webpack_public_path__ + \"static/media/starships.19706559.jpg\";","module.exports = __webpack_public_path__ + \"static/media/vehicles.788b92b8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/q.c5857f7d.jpg\";","import React from \"react\";\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"header\">\r\n        <div className=\"logo\">\r\n          <p>Star Wars</p>\r\n        </div>\r\n          <div>\r\n              <p>{this.props.category}</p>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nclass Card extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"card\">\r\n                <img src={this.props.src} alt=\"card\"/>\r\n                <span className=\"category_text\">{this.props.name}</span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\n\r\nclass Footer extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"footer\">\r\n                <img src=\"http://www.antonsetiawan.com/images/github10-inverse.png\" alt=\"qwe\" className=\"github\"/>\r\n                <a href=\"https://github.com/\"> <p>GitHub</p></a>\r\n                <p className=\"dev_name\"> Developed by Vitalik Diadychko</p>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./App.css\";\n\n\nimport Header from \"./component/header/Header\";\nimport Card from \"./component/card/Card\";\nimport Footer from \"./component/footer/Footer\";\n\nimport character from './img/home/character.jpg'\nimport films from './img/home/films.jpg'\nimport planets from './img/home/planets.jpg'\nimport species from './img/home/species.jpg'\nimport starships from './img/home/starships.jpg'\nimport vehicles from './img/home/vehicles.jpg'\n\nclass App extends React.Component {\n  render() {\n    return (\n      <>\n        <Header category=\"A VISUAL GUIDE\"/>\n        <div>\n          <div className=\"app\">\n            <Link to=\"/people\">\n              <Card name=\"Character\" src={character} />\n            </Link>\n            <Link to=\"/films\">\n              <Card name=\"Film\" src={films} />\n            </Link>\n            <Link to=\"/species\">\n              <Card name=\"Species\" src={species} />\n            </Link>\n            <Link to=\"/starships\">\n              <Card name=\"Starships\" src={starships} />\n            </Link>\n            <Link to=\"/vehicles\">\n              <Card name=\"Vehicles\" src={vehicles} />\n            </Link>\n            <Link to=\"/planets\">\n              <Card name=\"Planets\" src={planets} />\n            </Link>\n          </div>\n        </div>\n        <Footer />\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const BASE_API_URL = \"https://swapi.co/api/\";\r\n\r\nexport const get =  (url, params = {}) => {\r\n    return fetch(BASE_API_URL + url)\r\n        .then(response => response.json())\r\n}","import {get} from './baseApi'\r\n\r\nexport const getAll = async ({page}) => {\r\n    const urlParams = new URLSearchParams();\r\n    urlParams.set('page', page);\r\n    return get(`people?${urlParams.toString()}`)\r\n};\r\n\r\nexport const getById = async (personId) => {\r\n    return get(`people/${personId}`)\r\n};","import React from \"react\";\r\n\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ApiPagination = ({ location, count, page = 1, perPage = 10 }) => {\r\n  const pagesCount = Math.ceil(count / perPage);\r\n  const pages = [];\r\n\r\n  for (let i = 0; i < pagesCount; i++){\r\n    pages.push(i + 1)\r\n  }\r\n\r\n  const getSearchWithPage = (page) => {\r\n    const urlParams = new URLSearchParams(location.search);\r\n\r\n    urlParams.set('page', page);\r\n\r\n    return urlParams.toString()\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"apiPagination\">\r\n      {pages.map(page => (\r\n        <Link\r\n            key={page}\r\n          to={{\r\n            pathname: location.pathname,\r\n            search: getSearchWithPage(page)\r\n          }}\r\n        >\r\n          {page}\r\n        </Link>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nApiPagination.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  page: PropTypes.number,\r\n  perPage: PropTypes.number,\r\n}\r\nexport default withRouter(ApiPagination);\r\n","import React from \"react\";\r\n\r\nclass Loading extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"loading\">\r\n                <p>Loading...</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Loading;","import React from \"react\";\r\n\r\nimport * as peopleApi from \"../../api/peopleApi\";\r\nimport ApiPagination from \"../pagination/ApiPagination\";\r\n\r\nimport Loading from \"../loading/Loading\";\r\n\r\nimport q from \"../../img/people/q.jpg\"\r\n\r\n\r\nclass People extends React.Component {\r\n  state = {\r\n    isLoaded: false,\r\n    page: 1,\r\n    count: 0,\r\n    people: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.updatePageFromUrl();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.updatePageFromUrl();\r\n  }\r\n\r\n  updatePageFromUrl() {\r\n    const { location } = this.props;\r\n    const urlParams = new URLSearchParams(location.search);\r\n    const page = +urlParams.get(\"page\") || 1;\r\n\r\n    if (page === this.state.page) {\r\n      return;\r\n    } else {\r\n      this.setState({ page }, this.loadPeople);\r\n    }\r\n  }\r\n\r\n  loadPeople = async () => {\r\n    const { page } = this.state;\r\n    const { count, results: people } = await peopleApi.getAll({ page });\r\n\r\n    this.setState({\r\n      people,\r\n      count,\r\n      isLoaded: true\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { people, isLoaded, count, page } = this.state;\r\n    return (\r\n      <>\r\n        {isLoaded ? (\r\n          <>\r\n            <ApiPagination count={count} page={page} />\r\n            <div className=\"peopleList\">\r\n            {people.map(person => (\r\n              <div key={person.name} className=\"people\">\r\n                  <img src={q} alt=\"{person.name}\"/>\r\n                  <p>{person.name}</p>\r\n              </div>\r\n            ))}\r\n            </div>\r\n\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Loading />\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default People;\r\n","import React from \"react\";\r\n\r\n\r\nimport People from \"./people/People\";\r\n\r\nclass Films extends React.Component {\r\n\r\n\r\n    render() {\r\n        return <People />;\r\n    }\r\n}\r\n\r\nexport default Films;\r\n","import React from \"react\";\r\n\r\nimport { getPlanets } from \"../api/Api\";\r\n\r\nclass Planets extends React.Component {\r\n    componentDidMount() {\r\n        getPlanets()\r\n    }\r\n\r\n    render() {\r\n        return <div >fghfgh</div>;\r\n    }\r\n}\r\n\r\nexport default Planets;","\r\nimport React from \"react\";\r\n\r\nimport { getSpecies } from \"../api/Api\";\r\n\r\nclass Species extends React.Component {\r\n    componentDidMount() {\r\n        getSpecies()\r\n    }\r\n\r\n    render() {\r\n        return <div >fghfgh</div>;\r\n    }\r\n}\r\n\r\nexport default Species;","import React from \"react\";\r\n\r\n\r\n\r\n\r\nclass Vehicles extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            names: []\r\n        };\r\n        this.getVehicles = this.getVehicles.bind(this)\r\n    }\r\n\r\n    getVehicles = async() => {\r\n        const response = await fetch(`${URL}vehicles/`);\r\n        const data = await response.json();\r\n        console.log(data.results);\r\n        return this.setState({names: data.results})\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getVehicles()\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div >\r\n\r\n                dfdsfd\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Vehicles;\r\n","\r\nimport React from \"react\";\r\n\r\nimport { getStarships } from \"../api/Api\";\r\n\r\nclass Starships extends React.Component {\r\n    componentDidMount() {\r\n        getStarships()\r\n    }\r\n\r\n    render() {\r\n        return <div >fghfgh</div>;\r\n    }\r\n}\r\n\r\nexport default Starships;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst PageNotFound = () => (\r\n  <>\r\n    <div className=\"pageNotFound\">\r\n      <Link to=\"/\">\r\n        <p>Come back home</p>\r\n      </Link>\r\n      <p>404</p>\r\n    </div>\r\n  </>\r\n);\r\n\r\nexport default PageNotFound;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Films from \"./component/Films\";\nimport Planets from \"./component/Planets\";\nimport People from \"./component/people/People\";\nimport Species from \"./component/Species\";\nimport Vehicles from \"./component/Vehicles\";\nimport Starships from \"./component/Starships\";\nimport PageNotFound from \"./component/pageNotFound/PageNotFound\";\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\n\nconst Root = () => (\n    <Router basename={process.env.PUBLIC_URL}>\n        <Switch>\n            <Route exact path=\"/\" component={App} />\n            <Route path=\"/films\" component={Films} />\n            <Route path=\"/planets\" component={Planets} />\n            <Route path=\"/people\" component={People} />\n            <Route path=\"/species\" component={Species} />\n            <Route path=\"/vehicles\" component={Vehicles} />\n            <Route path=\"/starships\" component={Starships} />\n            <Route render={PageNotFound} />\n        </Switch>\n    </Router>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}